Longest Consecutive Sequence

Given an unsorted array of integers, find the length of the longest consecutive elements sequence.

For example,
Given [100, 4, 200, 1, 3, 2],
The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.

Your algorithm should run in O(n) complexity.

============================================================================================

class Solution {
public:
    int longestConsecutive(vector<int> &num) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (num.size() <= 1) {
            return num.size();
        }
        
        vector<bool> visited(num.size(), false);
        unordered_map<int, int> num_map;
        
        for (int i = 0; i < num.size(); i++) {
            num_map.insert(make_pair(num[i], i));
        }
        
        int cur;
        int max = 0;
        int length;
        for (int i = 0; i < num.size(); i++) {
            if (visited[i]) {
                continue;
            }
            
            length = 1;
            cur = num[i] - 1;
            while (num_map.find(cur) != num_map.end()) {
                visited[num_map[cur]] = true;
                cur--;
                length++;
            }
            
            cur = num[i] + 1;
            while (num_map.find(cur) != num_map.end()) {
                visited[num_map[cur]] = true;
                cur++;
                length++;
            }
            
            if (length > max) {
                max = length;
            }
        }
        
        return max;
    }
};
