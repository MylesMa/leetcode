Valid Parentheses

Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.

===============================

class Solution {
public:
    bool isValid(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        vector<char> ret;
        
        map<char, char> blacket_map;
        blacket_map.insert(make_pair(')', '('));
        blacket_map.insert(make_pair(']', '['));
        blacket_map.insert(make_pair('}', '{'));
        
        for (int i = 0; i < s.length(); i++) {
            if (s[i] == '(' || s[i] == '[' || s[i] == '{') {
                ret.push_back(s[i]);
            }
            if(s[i] == ')' || s[i] == ']' || s[i] == '}') {
                if (ret.empty() || ret.back() != blacket_map[s[i]]) {
                    return false;
                } else {
                    ret.pop_back();
                }
            } 
        }
        
        return ret.empty();        
    }
};
