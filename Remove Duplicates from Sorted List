Remove Duplicates from Sorted List

Given a sorted linked list, delete all duplicates such that each element appear only once.

For example,
Given 1->1->2, return 1->2.
Given 1->1->2->3->3, return 1->2->3.

=========================================================================

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *deleteDuplicates(ListNode *head) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if (!head) {
            return head;
        }
        
        ListNode* ptr = head;
        ListNode* np = ptr->next;
        ListNode* pre;
        while (ptr) {
            pre = ptr;
            while (np && np->val == pre->val) {
                pre = np;
                np = np->next;
            }
            ptr->next = np;
            
            if (np) {
                np = np->next;
            }
            ptr = ptr->next;
        }
        
        return head;
    }
};
