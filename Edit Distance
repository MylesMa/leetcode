Edit Distance

Given two words word1 and word2, find the minimum number of steps required to convert word1 to word2. (each operation is counted as 1 step.)

You have the following 3 operations permitted on a word:

a) Insert a character
b) Delete a character
c) Replace a character

=============================================================

class Solution {
  public:
    int minDistance(string word1, string word2) {
      // Start typing your C/C++ solution below
      // DO NOT write int main() function

      if (word1.empty()) {
        return word2.length();
      }   

      if (word2.empty()) {
        return word1.length();
      }   

      vector<vector<int> > dp(word1.length() + 1,
                              vector<int>(word2.length() + 1, INT_MAX));

      dp[0][0] = 0;
      for (int i = 0; i < word1.length() + 1; i++) {
        dp[i][0] = i;
      }   
       
      for (int i = 0; i < word2.length() + 1; i++) {
        dp[0][i] = i;
      }   

      for (int i = 1; i < word1.length() + 1; i++) {
        for (int j = 1; j < word2.length() + 1; j++) {
          dp[i][j] = std::min(dp[i - 1][j] + 1, dp[i][j - 1] + 1); 
          dp[i][j] = std::min(dp[i][j],
                              dp[i - 1][j - 1] + (word1[i - 1] != word2[j - 1]));
        }                                                                                                                                                                                                                                    
      }   

      return dp[word1.length()][word2.length()];
    }   
};
